problem:
  # Problem name to prefix output files with
  name: Project01
  # The base OpenFOAM case; this needs to be fully functional case one paramters/files are substituted.
  template_case: 'case'
  # Experiment paramters
  parameters:
    Sv:
      type: range
      value_type: float
      bounds: [1e-5, 1e-3]
      log_scale: False
    xmin:
      type: choice
      value_type: float
      values: [0.01, 0.02, 0.03, 0.04]
      is_ordered: True
    xmax:
      type: choice
      value_type: float
      values: [0.05, 0.06, 0.07, 0.09]
      is_ordered: True
    ymin:
      type: choice
      value_type: float
      values: [0.01, 0.02, 0.03, 0.04]
      is_ordered: True
    ymax:
      type: choice
      value_type: float
      values: [0.05, 0.06, 0.07, 0.09]
      is_ordered: True
    numberOfSubdomains:
      type: range
      value_type: int
      bounds: [4, 8]
      log_scale: False
  # Experiment objectives. Metric values are fetched through shell commands in the working directory of
  # the specific trial
  objectives:
    MaxError:
      command: ['awk', '/^Max/{print($6+0)}', 'log.pvpython']
      threshold: 1e-6
      minimize: True
      lower_is_better: True

meta:
  # When clonging template case, specify extra files/dirs to clone
  case_subdirs_to_clone: ["0.orig", "dynamicCode", "error.py", "plotK.py"]
  # Where to clone trial cases
  clone_destination: "./"
  # Case run mode (local, slurm)
  case_run_mode: local
  # Metric evaluation mode (local, slurm)
  metric_value_mode: local
  # How should we run your case?
  # Metric values are extracted through problem.objectives.*.command
  # after completion of the following command
  # The command is processed to provide a couple of variables:
  # - $CASE_PATH: fullpath to **parameter variation case**
  # - $CASE_NAME: generated name of the **parameter variation case**
  case_run_command: ['./Allrun']
  #case_run_command: ['sbatch', '-J', '$CASE_NAME', './Allrun.slurm', '$CASE_PATH']
  # How to check for job completion?
  # The output of this command is "split", and the second element is considered the status
  # This has no effect if local mode is used
  slurm_status_query: ['sacct', '--name', '$CASE_NAME', '-o', 'JobName%60,State', '-n']
  # Number of trials to generate:
  # Using SOBOL for paramter variation
  # Model is automatically chosen for optimization studies
  n_trials: 8
  # Number of trials to deploy at the same time (in parallel)
  n_parallel_trials: 2
  # Try to use SAASBO, default is to use: GPEI
  use_saasbo: True
  # Number of pareto front points to generate
  n_pareto_points: 10
  # Paramters can be substitued as whole case files
  # There are done first if present
  #file_copies:
  #modelType:
  #  template: "/constant/transportProperties"
  # Parameters can also be substituted per-file
  scopes:
    "/system/fvOptions":
      Sv: "codedSource.Sv"
      xmin: "codedSource.xmin"
      xmax: "codedSource.xmax"
      ymin: "codedSource.ymin"
      ymax: "codedSource.ymax"
    "/system/decomposeParDict":
      numberOfSubdomains: "numberOfSubdomains"

# Evaluate how the optimization algorithm did
verify:
  var1:
    - Sv: 1e-4
    - xmax: 0.06
    - ymax: 0.06
    - numberOfSubdomains: 4
